# Single Kubernetes YAML for PostgreSQL, Vault, and ArgoCD

---
# Namespace for Vault and Postgres
apiVersion: v1
kind: Namespace
metadata:
  name: vault
---
apiVersion: v1
kind: Namespace
metadata:
  name: postgres

---
# PostgreSQL Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
        envFrom:
        - secretRef:
            name: postgres-secret
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
      volumes:
      - name: postgres-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres

---
# HashiCorp Vault Deployment with PostgreSQL Storage Backend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
  namespace: vault
  labels:
    app: vault
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      containers:
      - name: vault
        image: hashicorp/vault:1.15
        ports:
        - containerPort: 8200
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: vault-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vault-secret
              key: POSTGRES_PASSWORD
        readinessProbe:
          httpGet:
            path: /v1/sys/health
            port: 8200
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: vault-config
          mountPath: /vault/config
        command: ["/bin/sh", "-c"]
        args:
          - sleep 10 && vault server -config=/vault/config/vault.hcl
      volumes:
      - name: vault-config
        configMap:
          name: vault-config
---
apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: vault
spec:
  ports:
  - port: 8200
    targetPort: 8200
  selector:
    app: vault

---
# Vault ConfigMap to use PostgreSQL storage backend
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  namespace: vault
data:
  vault.hcl: |
    storage "postgresql" {
      connection_url = "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres.postgres.svc.cluster.local:5432/vault?sslmode=disable"
    }
    listener "tcp" {
      address     = "0.0.0.0:8200"
      tls_disable = 1
    }
    ui = true

---
# ArgoCD Application for Vault and Postgres
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault-postgres-app
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://github.com/your-repo/kubernetes-configs'
    targetRevision: HEAD
    path: 'apps'
  destination:
    server: https://kubernetes.default.svc
    namespace: vault
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true

---
# Secrets for Postgres and Vault
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: postgres
type: Opaque
data:
  POSTGRES_USER: bXktcG9zdGdyZXMtdXNlcg==  # 'my-postgres-user' base64 encoded
  POSTGRES_PASSWORD: bXktcG9zdGdyZXMtcGFzc3dvcmQ=  # 'my-postgres-password' base64 encoded
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-secret
  namespace: vault
type: Opaque
data:
  VAULT_DEV_ROOT_TOKEN_ID: bXktdmF1bHQtcm9vdC10b2tlbg==  # 'my-vault-root-token' base64 encoded
  POSTGRES_USER: bXktcG9zdGdyZXMtdXNlcg==
  POSTGRES_PASSWORD: bXktcG9zdGdyZXMtcGFzc3dvcmQ=
